# -*- coding: utf-8 -*-
"""IRIS_Model_Building.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T8jjKTjXGpKVyZnBrcM1Fye-Hc0PJvz_
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score

from google.colab import drive
drive.mount('/content/drive')

# Load the cleaned data
df = pd.read_csv('/content/drive/MyDrive/AI BootCamp/cleaned_iris_data.csv')
X = df.drop('class', axis=1)  # Features
y = df['class']  # Target

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Random Forest model
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
print(f'Accuracy: {accuracy_score(y_test, y_pred)}')
print(f'Precision: {precision_score(y_test, y_pred, average="macro")}')
print(f'Recall: {recall_score(y_test, y_pred, average="macro")}')

import joblib

# model path
drive_path = '/content/drive/MyDrive/AI BootCamp/'
filename = 'iris_model.pkl'

# Save the trained model to a file
joblib.dump(model, drive_path + filename)

# Function to load the model from the file
def load_model():
    return joblib.load('/content/drive/MyDrive/AI BootCamp/iris_model.pkl')

# Example usage:
loaded_model = load_model()